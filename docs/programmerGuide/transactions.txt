This document contains information on the Transactions module of the SSTS system.
This document is intended for the system admin(s) or developers wishing to build
on the current system.

The Transaction module has 2 files. One is TransactionEngine.php and the other is Transaction.php
The TransactionEngine file holds all the "guts" of the Transaction module. This is were all functions 
that handle creating creating transactions, buying stock, selling stock, etc exist. The Transaction.php just 
defines a php object to hold data from the transactions database.

Below is the documentation from the TransactionEngine.php file. This documentation is in a
semi Javadoc style where the comments list what the function does, it's parameters, 
what it returns.  


/**
	Sells x amount of a stock from an portfolio

	$uid - the user's id
	$portName - the user's portfolio
	$ticker - the stock ticker for which stock to sell.
	$numToSell - the number of shares to sell

	preconditions: $uid and $portName is a valid combo

	returns  1 the transaction was successful
		-1 the number of stocks to sell was below or equal to 0
		-2 the ticker given was invalid
		-3 the portfolio does does not have enough shares to sell
*/
function sellStock($uid, $portName, $ticker, $numToSell)


/**
	Creates and handles a buy transaction for a single portfolio. 

	$uid - the users id
	$portName - the users portfolio name
	$ticker - the ticker for which stock to sell
	$numToBuy - the number of shares to buy

	returns  1 if the transaction was successful
		-1 if $numToBuy is <= 0. (no point making a transaction for 0)
		-2 if the $ticker does not exist in the stock database
		-3 if the portfolio uid combo does not exist
		-4 if the users portfolio does not have enough cash to buy all the shares
*/
function buyStock($uid, $portName, $ticker, $numToBuy)


/**
	gets all of a users transactions from the transactions database

	$uid - the users id
	$portName - The users portfolio.

	returns an array of transaction objects or null if the uid name combo does not exist.
*/
function getAllUserTrans($uid, $portName)


/**
	gets the name and last trade price of a stock ticker

	$ticker - the ticker to check.

	returns an array containing the name and last price. (column names as index) 
	        null if the ticker is not in the database
*/
function getStockNamePrice($ticker)


/**
	Insets a row into the transaction database.

	$uid - the users id
	$portName - users portfolio name
	$symbol - the stock ticker that is sold/bought
	$shareChange - the change in the number of shares

	Precondition: the uid and portName combo is valid
*/
function insertTransaction($uid, $portName, $symbol, $shareChange, $sharePrice)
